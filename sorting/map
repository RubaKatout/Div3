#include<bits/stdc++.h>

using namespace std;

#define debug(x) cout << '[' << #x << " is: " << x << "] " << endl;
#define imod(a , n) (a % n + n ) % n

#define fastio ios_base::sync_with_stdio(false);cin.tie(0);
#define inF freopen("ladder.in","r",stdin );
#define outF freopen("ladder.out" , "w" , stdout ) ;
#define sor(v) sort(v.begin() , v.end());
#define print(v) for(auto f : v ) cout << f << " " ;
#define rsor(v) sort(v.rbegin() , v.rend());
#define rev(v) reverse(v.begin() , v.end());
#define scan(v) for(auto &it : v)cin >> it ;

#define logar(x , y) log(x) / log(y)
#define __sum(n) n * (n + 1) / 2
#define __lcm(a , b) a / __gcd(a , b) * b
#define pii pair<int , int >
#define ll long long

#define matrix vector<vector<ll>>
#define pii pair<int , int >

const int di[] = {1 , -1 , 0 , 0};
const int dj[] = {0 , 0 , 1 , -1};

const int mod = 1e9 + 7;
const int N = 101 ;


#include<ext/pb_ds/assoc_container.hpp>
using namespace __gnu_pbds ;

typedef tree<int , null_type , less_equal<int> , rb_tree_tag , tree_order_statistics_node_update> indexed_set ;



int32_t main()

{   //inF;
    //inF;outF;
    fastio;


    int n , k ;
    cin >> n >> k ;
    int ans = -1 , cnt = 0 ;
    map<int , int > mp ;


    for(int i = 0 ; i < n ; i ++){
        int a ;
        cin >> a ;
        mp[a] ++;

    }
    if(k == 0){
        if(mp.count(1))cout << -1 ;
        else cout << 1 ;
        return 0 ;
    }
    for(auto f : mp){

        cnt += f.second ;
        if(cnt == k){
            ans = f.first ;
            break;
        }
    }
    cout << ans ;

}
